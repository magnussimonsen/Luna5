
/* button-row-flex-wrap-base.css */

/*
Base styles for button rows that need to wrap flexibly.
No padding, gap, or margin defined here; these should be set in design.css
*/

/*
  2025-09-29 (Inline variant note)
  Added `.button-row-flex-wrap-base-inline` plus the state modifier
  `.button-row-flex-wrap-base-inline--active` for sub-groups inside a
  toolbar (e.g. the link button + its inline link editor). The base
  class stretches to full width; the inline variant shrinks to its
  content so multiple clusters can sit side-by-side without forcing
  a line break. Apply the `--active` modifier when the owning control
  (e.g. link mode) is toggled to visually delineate the inline group.
*/

.row-flex-wrap-base {   /* Change name to row-flex-wrap-base !!! */
  display: flex;
  flex-wrap: wrap;
  align-items: center; /* Vertically center items */
  width: 100%; /* Full width to allow wrapping */
  height: fit-content; /* Height adjusts based on content */
  box-sizing: border-box; /* Include padding and border in element's total width and height */
  /*background-color: var(--button-row-background-color, transparent);  Default to transparent if not set */
  gap: 0.2em 0em;
  padding: 2px 0em; /* Vertical padding only */
}

/* Child of row-flex-wrap-base to apply padding and border not width 100% */
.row-flex-wrap-base-child{
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  height: fit-content;
  box-sizing: border-box;
  gap: 0.2em 0em;
  padding: 0em 0em;
  margin: 0em 0em;
}
.util-transparent-border {
  border: solid 2px transparent;
  border-left: 0px solid transparent;
  border-right: 0px solid transparent;
  border-radius: var(--button-border-radius, min(4px, 0.5em));
}

.util-active-border {
  border: solid 2px var(--button-on-color, var(--debug-color));
  border-radius: var(--button-border-radius, min(4px, 0.5em));
} 

.row-flex-wrap-base:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  user-select: none;
  pointer-events: none;
}

/* This class extends button-row-flex-wrap-base  with left margin auto */
.row-flex-wrap-base.margin-left-auto {
  margin-left: auto;
  /* Do not force full width here; allow the element to size to content so
     `margin-left: auto` pushes it to the right edge of the parent flex container. */
  width: auto;
}

/* This class extends button-row-flex-wrap-base  with flex start alignment */
.row-flex-wrap-base.flex-start {
  justify-content: flex-start;
}

/* This class extends button-row-flex-wrap-base  with flex end alignment */
.row-flex-wrap-base.flex-end {
  justify-content: flex-end;
}


