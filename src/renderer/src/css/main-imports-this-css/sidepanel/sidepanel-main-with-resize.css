/* The main side panel container with resize handle */

.sidepanel-main {
  position: fixed;
  /* overlay positioned inside workspace container */
  right: 0;
  /* Offset from top so the panel sits below menubar+toolbar. App.vue sets --top-chrome-height dynamically */
  top: calc(5px + var(--top-chrome-height, 0px));
  transform: none;
  /* Height: stretch from below top chrome to above bottom statusbar. App.vue sets --bottom-chrome-height if needed */
  height: calc(100vh - var(--top-chrome-height, 0px) - var(--bottom-chrome-height, 0px) - 10px);
  box-shadow: var(--box-shadow, 0 0 8px rgba(0, 0, 0, 0.1));
  display: flex;
  flex-direction: row;
  overflow: hidden;
  border-left: 0.1em solid var(--button-on-color, lightgreen);
  border-top: 0.1em solid var(--button-on-color, lightgreen);
  border-bottom: 0.1em solid var(--button-on-color, lightgreen);
  border-radius: 0;
  box-sizing: border-box;
  z-index: var(--sidepanel-main-z-index, 4000);
  background: var(--sidepanel-background, var(--debug-color), white);
}
/* While resizing: prevent text selection & show consistent cursor */
body.sidepanel-resizing {
  cursor: ew-resize !important;
  user-select: none;
}

/* Left-edge resize handle (panel anchored to the right) */
.resize-handle.left {
  position: absolute;
  top: 0;
  left: 0;
  width: min(5px, 0.5em);
  /* Thin handle for resizing */
  cursor: ew-resize;
  background: var(--button-on-color, lightgreen);
  height: 100%;
  flex-shrink: 0;
  display: block;
}

.resize-handle.left:hover,
.resize-handle.left:active {
  background: var(--active-border-color-hover, green);
}

.util-sidepanel-z-index {
  z-index: var(--sidepanel-main-z-index, 4000);
}